{{- if eq .chezmoi.os "darwin" -}}
#!/bin/bash
# This script installs Homebrew packages defined in packages.toml

set -e  # Exit on error
echo "===== Installing Homebrew Packages ====="

# Set Homebrew options
export HOMEBREW_NO_INSTALL_UPGRADE=TRUE
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
export HOMEBREW_NO_INSTALL_CLEANUP=1

# Define arrays of formulae and casks to install
formulae=(
    {{ range $package := .packages.homebrew.common.formulae }}
    "{{ $package }}"
    {{ end }}

    {{ if .personal_computer }}
    {{ range $package := .packages.homebrew.personal_computer.formulae }}
    "{{ $package }}"
    {{ end }}
    {{ end }}

    {{ if .work_computer }}
    {{ range $package := .packages.homebrew.work_computer.formulae }}
    "{{ $package }}"
    {{ end }}
    {{ end }}
)

casks=(
    {{ range $package := .packages.homebrew.common.casks }}
    "{{ $package }}"
    {{ end }}

    {{ if .personal_computer }}
    {{ range $package := .packages.homebrew.personal_computer.casks }}
    "{{ $package }}"
    {{ end }}
    {{ end }}

    {{ if .work_computer }}
    {{ range $package := .packages.homebrew.work_computer.casks }}
    "{{ $package }}"
    {{ end }}
    {{ end }}
)

taps=(
    {{ range $tap := .packages.homebrew.common.taps }}
    "{{ $tap }}"
    {{ end }}
)

# Update Homebrew
echo "Updating Homebrew..."
brew update

echo "Adding taps..."
for tap in "${taps[@]}"; do
    if brew tap | grep -q "^${tap}$"; then
        echo "Tap already added: $tap"
    else
        echo "Adding tap: $tap"
        brew tap "$tap"
    fi
done


# Get lists of currently installed packages
echo "Checking currently installed packages..."
currently_installed_formulae=$(brew list --formula -1 2>/dev/null || echo "")
currently_installed_casks=$(brew list --cask -1 2>/dev/null || echo "")

# Filter out already installed formulae
formulae_to_install=()
for formula in "${formulae[@]}"; do
    if [[ -z "$formula" ]]; then
        continue  # Skip empty entries
    fi

    # Check if formula is already installed
    if echo "$currently_installed_formulae" | grep -q "^${formula}$"; then
        echo "Formula already installed: $formula"
    else
        formulae_to_install+=("$formula")
    fi
done

# Install only missing formulae
if [[ ${#formulae_to_install[@]} -gt 0 ]]; then
    echo "Installing ${#formulae_to_install[@]} missing formulae..."
    for formula in "${formulae_to_install[@]}"; do
        echo "Installing formula: $formula"
        brew install --formula "$formula" || echo "Failed to install $formula, continuing..."

        # Special case for git-credential-manager
        if [[ "$formula" == "git-credential-manager" ]]; then
            git-credential-manager install
        fi
    done
else
    echo "All formulae are already installed."
fi

{{ if not .is_ci_workflow }}
# Filter out already installed casks
casks_to_install=()
for cask in "${casks[@]}"; do
    if [[ -z "$cask" ]]; then
        continue  # Skip empty entries
    fi

    # Check if cask is already installed (exact match)
    if echo "$currently_installed_casks" | grep -q "^${cask}$"; then
        echo "Cask already installed: $cask"
    else
        # Double-check with brew info to handle name variations
        if brew info --cask "$cask" 2>/dev/null | grep -q "Installed"; then
            echo "Cask already installed (verified): $cask"
        else
            casks_to_install+=("$cask")
        fi
    fi
done

# Install only missing casks
if [[ ${#casks_to_install[@]} -gt 0 ]]; then
    echo "Installing ${#casks_to_install[@]} missing casks..."
    for cask in "${casks_to_install[@]}"; do
        echo "Installing cask: $cask"
        brew install --cask "$cask" || echo "Failed to install $cask, continuing..."
    done
else
    echo "All casks are already installed."
fi
{{ end }}

echo "===== Homebrew packages installation complete! ====="
exit 0
{{- end }}
